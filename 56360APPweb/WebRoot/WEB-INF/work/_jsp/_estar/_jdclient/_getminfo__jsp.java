/*
 * JSP generated by Resin Professional 3.1.3 (built Sun, 07 Oct 2007 06:30:19 PDT)
 */

package _jsp._estar._jdclient;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;

public class _getminfo__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = com.caucho.jsp.QJspFactory.allocatePageContext(this, _jsp_application, request, response, "/estar/jdclient/", session, 8192, true, false);
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      myFun.Funs MyFun;
      MyFun = (myFun.Funs) pageContext.getAttribute("MyFun");
      if (MyFun == null) {
        MyFun = new myFun.Funs();
        pageContext.setAttribute("MyFun", MyFun);
      }
      out.write(_jsp_string0, 0, _jsp_string0.length);
      myFun.DataKeyWord DataKeyWord;
      DataKeyWord = (myFun.DataKeyWord) pageContext.getAttribute("DataKeyWord");
      if (DataKeyWord == null) {
        DataKeyWord = new myFun.DataKeyWord();
        pageContext.setAttribute("DataKeyWord", DataKeyWord);
      }
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
	String action = request.getParameter("action");
	if (action.isEmpty()) {
		//out.print(MyFun.MyEnCode(MyFun.printError("Error",new String("\u7cfb\u7edf\u9519\u8bef(\u9519\u8ba4\u4ee3\u7801001)\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\uff01 ".getBytes()))));
		out.print(MyFun.printError("Error", new String(
				"\u7cfb\u7edf\u9519\u8bef(\u9519\u8ba4\u4ee3\u7801001)\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\uff01 ".getBytes())));
		out.close();
	} else {
		action = MyFun.GetRequest(action);
	}
	String StartCity = request.getParameter("StartCity");
	if (StartCity.isEmpty()) {
		//out.print(MyFun.MyEnCode(MyFun.printError("Error",new String("\u51fa\u53d1\u5730\u4f20\u503c\u9519\u8bef ".getBytes()))));
		out.print(MyFun.printError("Error",
				new String("\u51fa\u53d1\u5730\u4f20\u503c\u9519\u8bef ".getBytes())));
		out.close();
	} else {
		StartCity = MyFun.GetRequest(StartCity);
	}
	//
	String StopCity = request.getParameter("StopCity");
	if (StopCity.isEmpty()) {
		StopCity = "";
	} else {
		StopCity = MyFun.GetRequest(StopCity);
	}
	//
	String inType = MyFun.GetRequest(request.getParameter("inType"));//'\u4fe1\u606f\u7c7b\u578b \u9ed8\u8ba40\uff080:\u9a7e\u76fe\uff1b1\uff1a\u8fd0\u529b\u7f51\uff09
	if (inType.isEmpty()) {
		inType = "0";
	} else {
		inType = MyFun.GetRequest(inType);
	}
	//out.println(action);
	if (action.equals("getdatas"))//''\u53d6\u5f97\u521d\u59cb\u4fe1\u606f,\u53d6\u5f97\u5f53\u524d\u67e5\u770b\u4fe1\u606f
	{
		String pag = MyFun.GetRequest(request.getParameter("pag"));
		if (pag.equals("") || pag.equals("0")) {
			pag = "1";
		}
		int StartNum = (MyFun.StringToInt(pag) - 1) * 20;
		//String TotalNum=MyFun.GetRequest(request.getParameter("TotalNum"));
		out.print("22222222222222");
		out.print(DataKeyWord.SearchKeyWord(StartCity, StopCity,
				inType, StartNum, 1, 0));
		out.print("111111111111111111111111");
	} else if (action.equals("getnewdatas"))//'\u5237\u65b0\u8bfb\u53d6\u4fe1\u606f
	{
		String MaxID = MyFun.GetRequest(request.getParameter("MaxID"));
		out.print(DataKeyWord.SearchKeyWord(StartCity, StopCity,
				inType, 0, 1, 1));
	} else {
		//out.print(MyFun.MyEnCode(MyFun.printError("Error",new String("\u7cfb\u7edf\u9519\u8bef(\u9519\u8ba4\u4ee3\u7801002)\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\uff01 ".getBytes()))));
		out.print(MyFun.printError("Error", new String(
				"\u7cfb\u7edf\u9519\u8bef(\u9519\u8ba4\u4ee3\u7801002)\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\uff01 ".getBytes())));
		out.close();
	}

    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      com.caucho.jsp.QJspFactory.freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != -5493130486421572921L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("estar/jdclient/GetMInfo.jsp"), 1121238491298354906L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "\r\n".toCharArray();
  }
}
